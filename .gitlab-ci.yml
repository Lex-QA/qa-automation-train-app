stages:
  - test
  - report
  - deploy

variables:
  ALLURE_VERSION: "2.27.0"
  ALLURE_HOME: "$CI_PROJECT_DIR/allure"

cache:
  paths:
    - .venv/

before_script:
  - python -m venv .venv
  - source .venv/bin/activate
  - python -m pip install --upgrade pip
  - pip install -r requirements.txt

test:
  stage: test
  script:
    - pytest --alluredir=allure-results
    - python tools/swagger/generate_coverage.py  # генерирует coverage.html
  artifacts:
    paths:
      - allure-results/
      - coverage.html
      - coverage-history.json
    expire_in: 1 week

generate-allure-report:
  stage: report
  image: eclipse-temurin:17-jdk-jammy
  dependencies:
    - test
  script:
    - curl -o allure.tgz -L "https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz"
    - tar -xzf allure.tgz
    - mv allure-${ALLURE_VERSION} $ALLURE_HOME
    - export PATH="$ALLURE_HOME/bin:$PATH"
    - mkdir -p public
    - allure generate allure-results --clean -o public
    - cp coverage.html public/
  artifacts:
    paths:
      - public
    expire_in: 1 week

pages:
  stage: deploy
  dependencies:
    - generate-allure-report
  script:
    - echo "Publishing Allure + Coverage to GitLab Pages..."
  artifacts:
    paths:
      - public
  only:
    - main
