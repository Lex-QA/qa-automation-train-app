stages:
  - test
  - report
  - deploy

image: python:3.11

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  ALLURE_VERSION: "2.27.0"
  ALLURE_HOME: "$CI_PROJECT_DIR/allure"
  ALLURE_RESULTS_DIR: "allure-results"
  ALLURE_REPORT_DIR: "public"
  HISTORY_DIR: "allure-history"

cache:
  key: allure-history
  paths:
    - .cache/pip
    - allure-history

before_script:
  - python -m pip install --upgrade pip
  - pip install -r requirements.txt
  - pip install allure-pytest

test:
  stage: test
  script:
    - pytest --alluredir=$ALLURE_RESULTS_DIR
    - swagger-coverage-tool save-report
  artifacts:
    when: always
    paths:
      - $ALLURE_RESULTS_DIR/
      - coverage.html
    expire_in: 1 week

generate-report:
  stage: report
  image: ubuntu:22.04
  when: always
  dependencies:
    - test
  before_script:
    - apt-get update && apt-get install -y openjdk-17-jdk curl unzip xz-utils
    - curl -L -o allure.tgz "https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz"
    - tar -xzf allure.tgz
    - mv "allure-${ALLURE_VERSION}" "$ALLURE_HOME"
    - export PATH="$ALLURE_HOME/bin:$PATH"
  script:
    - echo "== Restoring previous history =="
    - if [ -d $HISTORY_DIR ]; then echo "Restoring previous history..."; cp -rv $HISTORY_DIR $ALLURE_RESULTS_DIR/history; else echo "No previous history found."; fi
