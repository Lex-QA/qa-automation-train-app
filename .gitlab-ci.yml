stages:
  - build
  - test
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  ALLURE_VERSION: "2.27.0"
  ALLURE_HOME: "$CI_PROJECT_DIR/allure"

cache:
  paths:
    - .cache/pip

before_script:
  - python -m venv .venv
  - source .venv/bin/activate
  - pip install --upgrade pip
  - pip install -r requirements.txt
  - pip install allure-pytest

run-tests:
  stage: test
  script:
    - pytest --alluredir=allure-results
  artifacts:
    when: always
    paths:
      - allure-results/
    expire_in: 1 hour

generate-allure-report:
  stage: deploy
  image: ubuntu:22.04
  before_script:
    - apt-get update && apt-get install -y curl openjdk-17-jre tar unzip
    - curl -L -o allure.tgz "https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz"
    - tar -xzf allure.tgz
    - mv allure-${ALLURE_VERSION} $ALLURE_HOME
    - export PATH="$ALLURE_HOME/bin:$PATH"
    - python3 tools/allure/environment.py
  script:
    - mkdir -p public
    - allure generate allure-results --clean -o public
  artifacts:
    paths:
      - public
  only:
    - main

pages:
  stage: deploy
  script:
    - echo "Publishing Allure report to GitLab Pages..."
  artifacts:
    paths:
      - public
  only:
    - main
